" vim: set ft=vimperator:
set all&
mapclear
cmapclear
imapclear

"----------
" 基本設定

" ブラウザタイトルの変更
set titlestring=Vimfox

" メニュー/ツール/リンクを表示
set gui=tabs
set notabnumbers
set noshowmode
set defsearch=google

" リンクのURIをコマンドラインに表示
set showstatuslinks=2

" 全て同じウィンドウに開く
set newtab=all

" コマンド入力時にコマンド名を自動補完
set wildmode=list:full

" URLのオートコンプリート
set complete=
autocmd VimperatorEnter ".*" :set complete+=lS
set history=300

" テキストボックスに勝手にフォーカスしない
set focuscontent

" フォーム記入時にTextAreaモードを利用する
set insertmode

" ページ全体で検索語を強調表示
set hlsearch

" ビープ音を鳴らさずビジュアルベルを使用
set visualbell

" テキストボックスにエディタを利用する
set editor="gvim -f -c ':set fenc=utf8'"

" コマンドラインへの移行時にIMEを指定の状態に切り替える
style -name commandline-ime chrome://* #liberator-commandline-command input {ime-mode: inactive;}

"----------
" Firefoxに関する設定
" アクセスキーを無効にする
set! ui.key.generalAccessKey=0

" Caretモードを見やすくする
set! ui.caretWidth=1
set! ui.caretBlinkTime=1000

" 最後のWindowを閉じてもFirefoxを終了しない
set! browser.tabs.closeWindowWithLastTab=false

" bookmarkletを利用可能にする
set! browser.urlbar.filter.javascript=false

" キャッシュをRAMに移動
set! browser.cache.disk.enable=true
set! browser.cache.memory.enable=true
set! browser.cache.memory.capacity=-1

" その他
set! config.trim_on_minimize=true
set! browser.history_expire_days=30
set! browser.history_expire_days_min=7
set! browser.history_expire_sites=1000
set! browser.sessionstore.max_tabs_undo=5
set! browser.sessionhistory.max_total_viewers=5
set! browser.tabs.loadInBackground=false

"----------
" 視覚に関する設定

" ヒントモードの文字を見やすく
hi Hint font-size: 12px; padding: 0 0.25em; margin: -0.25em 0 0 -0.5em; background-color: Gray; border: 0.5px Gray solid; -moz-border-radius: 3px; color: white; font-weight: bolder; opacity: 0.9;
hi HintActive background-color: greenyellow; border: 0.5px oldlace dotted; -moz-border-radius: 3px; padding: 0.1em; font-weight: bold;

" ヒントモードに使う文字の指定
set hintchars=;asdfghjkl

" コマンドラインを見やすく
hi Title                color: MintCream;
hi CompTitle            color: MintCream;
hi CompGroup            color: White;
hi CompItem[selected]   color: DodgerBlue; background-color: MintCream;
hi CompDesc             color: LightGray;
hi StatusLine           color: White;      background: rgba(0,0,0,0.7);    font-size: 10pt; font-weight: normal;
hi Normal               color: White;      background: rgba(128,128,128,0.7); font-size: 10pt;
hi ModeMsg              color: White;      background: rgba(128,128,128,0.7); font-size: 8pt;
style -name personas chrome://* <<EOM
#main-window { background-repeat: repeat-y !important;}
#browser-bottombox { background-image: none !important; }
#liberator-multiline-output, #liberator-completions { background: transparent !important; }
#content tabpanels { background-color: transparent !important; }
EOM
autocmd LocationChange .* js getBrowser().mCurrentBrowser.collapsed = buffer.URL == "about:blank" ? true : false

style -name panorama chrome://browser/content/tabview.html <<EOM
#bg {
 background-image: url(file:///C:/Dropbox/Media/Pictures/OmakeA.JPG) !important;
 background-size: auto 900px !important;
 background-position: top right !important;
}
.groupItem {
 background-color: rgba(224,234,245,.5) !important;
}
.title-container>.name {
 color: black !important;
 font-weight: bold;
 text-shadow: 1px 1px 2px pink;
}
#exit-button,#searchbutton { background-color: rgba(240,240,240,.5) !important; }
EOM

" コマンドラインの高さがおかしくなる現象を修正
command! ResetHeight js let(e=document.getElementById("liberator-visualbell"),p=e.parentNode){e.removeAttribute("width");e.removeAttribute("height");p.appendChild(p.removeChild(e));}

" 補完のURLが長すぎて、切れてしまう問題の対処
hi! CompResult -a -moz-binding: url(chrome://liberator/content/bindings.xml#compitem-td);
hi! CompDesc -a -moz-binding: url(chrome://liberator/content/bindings.xml#compitem-td);

"----------
" 操作に関する設定
" Insertモードでキーバインドが効くようにする
javascript <<EOM
window.addEventListener('keypress',
    function(event){
        function killEvent (){
            (event.preventDefault(), event.stopPropagation())
        };
        if (liberator.mode === modes.COMMAND_LINE && modes.extended === modes.HINTS){
            let key = events.toString(event);
            if (/^<[CA]/(key)){
                killEvent()
            };
        }
        if (liberator.mode === modes.INSERT && modes.extended === modes.MENU){
            let key = events.toString(event);
            if (key == '<Space>'){
                return
            };
            let map = mappings.get(modes.INSERT, events.toString(event));
            if (map) {
                killEvent();
                map.execute();
            }
        }
    },
    false
);
EOM

" <C-h>で履歴を表示しないようにする
noremap <C-h> <Nop>
inoremap <C-h> <Nop>
" <C-j>でダウンロード履歴を表示しないようにする
noremap <C-j> <Nop>
inoremap <C-j> <Nop>

" Insertモードで<C-n>,<C-p>をカーソルキー代わりにする
inoremap <C-n> <Down>
inoremap <C-p> <Up>
" Insertモードからヒントモードに移行する
inoremap <C-f> <ESC>f

" eでecho表示
noremap e :echo 

" 移動する前の場所を記憶
nnoremap gg mzgg
nnoremap G  mzG
nnoremap /  mz/

" <A-p>/<A-n>で現在のタブの位置変更
noremap <A-p> :tabmove! -1<CR>
noremap <A-n> :tabmove! +1<CR>

" <C-r>で履歴を表示
cnoremap <C-r> <Up>

" undo一覧から開く
noremap U :undo<Space>

" フレーム内移動
nnoremap gh [f
nnoremap gl ]f

"----------
" 検索用ブックマーク
silent bmark -title="Google US Search" -tags=keyword -keyword=gs https://www.google.com/search?q=%s
silent bmark -title="Twitter Search" -tags=keyword -keyword=ts http://search.twitter.com/search?q=%s
silent bmark -title="Wolfram|Alpha" -tags=keyword -keyword=wa http://www.wolframalpha.com/input/?i=%s
silent bmark -title="Delicious Search" -tags=keyword -keyword=ds http://delicious.com/search?p=%s
silent bmark -title="Wikipedia(ja)" -tags=keyword -keyword=wk http://ja.wikipedia.org/wiki/Special:Search?search=%s
silent bmark -title="NewYorkTimes" -tags=keyword -keyword=nt http://query.nytimes.com/search/sitesearch?query=%s

" ウェブアプリ操作系ブックマーク
silent bmark -title="Add Calendar Event" -tags=keyword -keyword=cal http://www.google.com/calendar/event?ctext=+%s+&action=TEMPLATE&pprop=HowCreated%3AQUICKADD
silent bmark -title="Add Task to RTM" -tags=keyword -keyword=rtm http://twitter.com/home?status=d+rtm+%s
silent bmark -title="Evernote Search" -tags=keyword -keyword=en http://www.evernote.com/search?q=%s

"----------
" プラグインに関する設定
" lo.js
noremap w :lo<Space>

" multi_requester.js
noremap ma :mr<Space>alc<Space>
noremap mt :mr<Space>twitter-search-pcod-no-jp<Space>
noremap mg :mr<Space>goo<Space>
noremap me :mr<Space>answers<Space>
noremap mw :mr<Space>weather-yahoo<Space>

" nextlink.js
let g:nextlink_nositeinfo_act = "f"
let g:nextlink_prevmap = "{{"
let g:nextlink_nextmap = "}}"

" FeedSomeKeys3.js
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
" gmail
command! lazy -nargs=+ autocmd VimperatorEnter .* <args>
command! lazyfmapsgmail -nargs=+ lazy fmaps -u 'https?://mail\.google\.com/mail' <args>
lazyfmapsgmail gi gs gt gd ga gc *a *n *r *u *s *t u k j o p n c / q ? x s e m ! # r a N ] [ z . I U S E GL
lazyfmapsgmail [,] ],[
" googlereader
command! -nargs=+ lazyfmapgooglereader  lazy fmap  -urls='http://www\.google\.co\.jp/reader/view' <args>
command! -nargs=+ lazyfmapsgooglereader lazy fmaps -urls='http://www\.google\.co\.jp/reader/view' <args>
lazyfmapsgooglereader -events=vkeypress <Space> <S-Space> N P X O
lazyfmapsgooglereader -events=vkeypress v m A
lazyfmapsgooglereader -events=vkeypress gh ga gs gS gu gt gT gd gf gF gc ge gp
lazyfmapsgooglereader -events=vkeypress r u / a
lazyfmapsgooglereader -events=vkeypress j,n k,p J,N K,P n,N p,P o,vn w,NO
lazyfmapgooglereader  -events=keypress  ; <CR>
lazyfmapgooglereader  -events=vkeypress , X
lazyfmapgooglereader  -events=vkeypress . O
lazyfmapsgooglereader -events=vkeypress <C-1>,1 <C-2>,2
" twitter.com
lazy fmaps -urls='^http://twitter\.com/' j k ?
lazy fmaps -urls='^http://twitter\.com/' -events=vkeydown n m t r gh gr gp gf gm
" rememberthemilk.com
lazy fmaps -u='https?://www\.rememberthemilk\.com/home/' j k m i c t ? d F,f G,g S,s L,l Y,y H,h M,m <Del> <C-S-Left> <C-S-Right>
" tumblr.com
lazy fmaps -u='www\.tumblr\.com/dashboard' -events=vkeydown j k

" twittperator.js
let g:twittperator_use_chirp = 1
" 呟きに現在のページのタイトルとURLを追加
cabbrev -javascript .ggl ggl(buffer.URI)
cabbrev -javascript .url '"' + buffer.title + '"' + ' ' + ggl(buffer.URI)
javascript <<EOM
userContext.ggl = function getGoogleShortenURL(url, callback){
    let uri = "https://www.googleapis.com/urlshortener/v1/url";
    let xhr = new XMLHttpRequest();
    xhr.open("POST", uri, !!callback);
    if (callback){
        xhr.onreadystatechange = function(){
            if (xhr.readyState == 4 && xhr.status == 200){
                callback(JSON.parse(xhr.responseText));
            }
        }
    }
    xhr.setRequestHeader("Content-Type", "application/json");
    xhr.send(JSON.stringify({ longUrl: url || buffer.URL }));
    if (!callback){
        return JSON.parse(xhr.responseText).id;
    }
}
EOM

"----------
" JavaScriptに関する設定
"----------
" ワンライナーのための設定
javascript <<EOM
modules.__defineGetter__("doc", function() content.document.wrappedJSObject);
modules.__defineGetter__("win", function() content.window.wrappedJSObject);
EOM

" 戻るを拡張
javascript <<EOM
let back   = mappings.getDefault(modes.NORMAL, 'H').action;
let remove = mappings.getDefault(modes.NORMAL, 'd').action;
mappings.addUserMap([modes.NORMAL], ['H'], 'exteded back',
    function(){
        (gBrowser.sessionHistory.index > 0 ? back : remove)(-1)
    }
);
EOM
" <C-c>で文字列をコピーまたはロードを止める
javascript <<EOM
mappings.addUserMap([modes.NORMAL,modes.VISUAL],['<C-c>'], 'Copy selected text or stop loading',
  function(){
    var sel = window.content.window.getSelection().toString();
    if (sel){
      util.copyToClipboard(sel,true);
    } else {
      BrowserStop();
      liberator.echo('Stopped loading !');
    }
  },{ rhs: 'Copy selected text or stop loading' }
);
EOM

"----------
" マウスオーバーするヒントモード
javascript <<EOM
hints.addMode('m', 'mouse over',
    function (elem, count){
        let evt = elem.ownerDocument.createEvent('MouseEvents');
        evt.initMouseEvent('mouseover', true, true, elem.ownerDocument.defaultView, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
        elem.dispatchEvent(evt);
    },
    function (){
        options.get('hinttags').get()
    }
);
EOM

"----------
" flash blockにヒントモード追加
javascript <<EOM
hints.addMode('z', 'Enable a Flash object',
    function(elem){
        elem.focus();
        var e = content.document.createEvent('MouseEvents');
        e.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);
        elem.dispatchEvent(e);
    },
    function(){
        '//xhtml:div[@title]'
    }
);
EOM

"----------
" コマンドラインでbangをトグル
javascript <<EOM
mappings.addUserMap([modes.COMMAND_LINE], ['<C-x>'], 'toggle bang',
    function(){
        let [,cmd,bang,args] = commands.parseCommand(commandline.command);
        bang = bang ? '' : '!';
        commandline.command = cmd + bang + ' ' + args;
    }
);
EOM

"----------
" 選択範囲のリンクを開くコマンド
command! sopen js [buffer.followLink(a) for (a in util.evaluateXPath("//a")) if (content.window.getSelection().containsNode(a, true))]

"----------
" openに渡るコマンドがドメインやIPアドレスかを自動で判断する
javascript <<EOM
eval(function(){
    liberator.registerObserver('enter',
        function(){
            let tldStr = "(?:museum|travel|aero|arpa|coop|info|jobs|name|nvus|biz|com|edu|gov|int|mil|net|org|pro|xxx|ac|ad|ae|af|ag|ai|ak|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|ct|cu|cv|cx|cy|cz|dc|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|fk|fl|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hi|hk|hm|hn|hr|ht|hu|ia|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|ks|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mi|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|nd|ne|nf|ng|nh|ni|nj|nl|nm|no|np|nr|nu|ny|nz|oh|ok|om|or|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ri|ro|ru|rw|sa|sb|sc|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tx|tz|ua|ug|uk|um|us|ut|uy|uz|va|vc|ve|vg|vi|vn|vt|vu|wa|wf|wi|ws|wv|wy|ye|yt|yu|za|zm|zw)";
            let regexp = new RegExp("^(?:[a-zA-Z0-9-.]+\\."+tldStr+"|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(?:\/|$)","i");
            plugins.libly.$U.around(liberator, 'open',
                function (next, args){
                    let [urls, where, force] = args;
                    if (typeof urls == "string") {
                        if ( !/^(?:\.{0,2}|~)\//.test(urls) && /^[a-zA-Z0-9-.\/]+$/.test(urls) && !regexp.test(urls) ){
                            args[0] = "google " + urls;
                        }
                    }
                    return next();
                }
            )
        }
    )
})();
EOM

"----------
" VISUALモードからGoogle検索
javascript <<EOM
mappings.addUserMap([modes.VISUAL], ['<C-g>'], 'Selection search',
    function(){
        BrowserSearch.loadSearch(getBrowserSelection(), true);
    });
EOM


"----------
" Insertモード時、C-1, ..., C-9,C-tが使えるようにする
javascript <<EOM
for(let i = 0; i < 10; i++){
    mappings.addUserMap([modes.INSERT], ['<C-' + i + '>'], 'tab operation - keep tabs INSERT',
        function(){
            mappings.get(1, i + 'gt').execute();
        }
    );
}
[['t', 'tabopen'], ].forEach(
    function([c, cmd]){
        mappings.addUserMap([modes.INSERT], ['<C-' + c + '>'], 'tab operation - keep tabs INSERT',
            function(){
                liberator.execute(cmd);
            }
        );
    }
);
EOM

"----------
" guを使いやすくする
javascript <<EOM
eval(function(){
    let regexp = new RegExp('([a-z]+://)([^/]*)(/.*)');
    let goUpPath = function(path) {
        if (!path){
            return
        };
        path = path.replace(/\/$/,'').replace(/^\/+/,'');
        if (path.indexOf('#')>0){
            return path.replace(/#.*/,'');
        }
        if (path.indexOf('?')>0){
            return path.replace(/\?.*/,'');
        }
        path = path.replace(/\/+$/,'');
        if (path.indexOf('/')>0){
            return path.replace(/\/[^\/]*$/,'/');
        }
    }
    let goUpHost = function(host){
        if (/^[0-9+.:]+$/.test(host)){
            return host;
        };
        let hostSuffix='';
        let x=host.lastIndexOf(':');
        if (x>0){
            hostSuffix = host.substr(x);
            host = host.substr(0,x);
        }
        hostSuffix = host.substr(host.length-6)+hostSuffix;
        host = host.substr(0,host.length-6);
        return host.replace(/[^.]*\./,'')+hostSuffix;
    }
    mappings.addUserMap([modes.NORMAL], ["gu"], 'Smart Go to parent',
        function(count){
            if (count < 1){
                count = 1
            };
            let url = buffer.URL;
            let [all,scheme,host,path] = regexp.exec(url);
            path = path.replace(/\/$/,'').replace(/^\/+/,'');
            for (let i = 0; i < count; i++){
                if (path){
                    if (path = goUpPath(path)){
                        url = scheme+host+'/'+path;
                    } else {
                        url = scheme+host+'/';
                    }
                } else {
                    host = goUpHost(host);
                    url = scheme+host+'/';
                }
            }
            if (url == buffer.URL) {
                liberator.beep();
            } else {
                liberator.open(url);
            }
        },
        { count: true }
    );
})();
EOM

"----------
" j,kキーでスムーススクロールする
javascript <<EOM
let self = (function(){
    mappings.addUserMap([modes.NORMAL], ["j"], "Smooth scroll down",
        function(count){
            self.smoothScrollBy(300 * (count || 1));
        },
        {count: true}
    );
    mappings.addUserMap([modes.NORMAL], ["k"], "Smooth scroll up",
        function(count){
            self.smoothScrollBy(300 * -(count || 1));
        },
        {count: true}
    );
    mappings.addUserMap([modes.NORMAL], ["<C-f>"], "Smooth page down",
        function(count){
            self.smoothScrollBy(650 * (count || 1));
        },
        {count: true}
    );
    mappings.addUserMap([modes.NORMAL], ["<C-b>"], "Smooth page up",
        function(count){
            self.smoothScrollBy(650 * -(count || 1));
        },
        {count: true}
    );

    var PUBLICS = {
        smoothScrollBy: function(moment){
            win = Buffer.findScrollableWindow();
            destY = win.scrollY + moment;
            clearTimeout(next);
            smoothScroll(moment);
        }
    }

    var next;
    var destY;
    var win;

    function smoothScroll(moment) {
        if (moment > 0){
            moment = Math.floor(moment / 2);
        } else {
            moment = Math.ceil(moment / 2);
        }
        win.scrollBy(0, moment);
        if (Math.abs(moment) < 1){
            setTimeout(makeScrollTo(win.scrollX, destY), 20);
            destY = null;
            return;
        }
        next = setTimeout(function() smoothScroll(moment), 20);
    }

    function makeScrollTo(x, y) function() win.scrollTo(x, y);
    return PUBLICS;
})();
EOM

"----------
" コマンドラインを外部エディタで編集
javascript <<EOM
mappings.addUserMap([modes.COMMAND_LINE], ['<C-i>'], 'Edit commandline by external editor',
    function(){
        io.withTempFiles(
            function (file){
                file.write(commandline.command);
                editor.editFileExternally(file.path);
                commandline.open(":", file.read(), modes.EX);
                return true;
            }
        );
    }
);
EOM

"----------
" statusbarのiconの間隔を狭める
style -name statusbar chrome://* <<EOM
#status-bar statusbarpanel {
    padding: 1px !important;
}
statusbarpanel > * {
    margin: 0 !important;
    padding:0 !important;
}
EOM

"----------
" /vimperator/stylesの中の.cssファイルを読み込む
javascript <<EOM
eval(function(){
    let filter = new RegExp('^.*\.css$');
    let dir = io.File('~/vimperator/styles');
    if (dir.exists() && dir.isDirectory() && dir.isReadable()){
        let files = dir.readDirectory(true);
        files.forEach(function(file){
            if (filter.test(file.path)){
                io.source(file.path, false);
            }
        });
    }
})();
EOM

"----------
" personas用の設定
javascript <<EOM
Cu.import("resource://gre/modules/LightweightThemeManager.jsm");
let prefs = Cc["@mozilla.org/preferences-service;1"]
              .getService(Ci.nsIPrefService)
              .getBranch("lightweightThemes.");
let observerService = Cc["@mozilla.org/observer-service;1"].getService(Ci.nsIObserverService);
function createLWTheme(obj){
    let buf = {
        id: null,
        name: null,
        accentcolor: "-moz-diag",
        textcolor: "-moz-diagtext",
        description: "custom personas",
        author: "",
        headerURL: "",
        footerURL: "",
        previewURL: "",
        iconURL: "",
    };
    for (let key in obj){
        switch(key){
        case "headerURL":
        case "footerURL":
        case "previewURL":
        case "iconURL":
            let path = obj[key];
            if (path.charAt(0) == "~"){
                path = io.File("~").path + path.substr(1);
            };
            let uri = util.createURI(path);
            buf[key] = uri.spec;
            break;
        default:
            buf[key] = obj[key];
        }
    }
    if (!buf.name){
        buf.name = buf.id;
    }
    return buf;
}
function appendThemes(aThemes){
    if (!aThemes){
        aThemes = liberator.globalVariables.lwt;
    };
    if (!(aThemes instanceof Array)){
        aThemes = [aThemes];
    };
    let currentThemes = LightweightThemeManager.usedThemes;
    aThemes.forEach(function(theme){
        let t = createLWTheme(theme);
        if (t && t.id){
            for (let i=0, len = currentThemes.length; i<len; i++){
                if (currentThemes[i].id == t.id){
                    currentThemes.splice(i, 1);
                    break;
                }
            }
        currentThemes.push(t);
        }
    });
    prefs.setCharPref("usedThemes", JSON.stringify(currentThemes));
    observerService.notifyObservers(null, "lightweight-theme-list-changed", null);
}
if (liberator.globalVariables.lwt instanceof Array){
    appendThemes(liberator.globalVariables.lwt);
}
function fileCompleter(c){
    return completion.runCompleter("file", c.filter).map(function(f) [f.path, f.leafName]);
}
let options = [
    ["textcolor", ["-c", "-color"], commands.OPTION_STRING],
    ["accentcolor", ["-a", "-accent"], commands.OPTION_STRING],
    ["headerURL", ["-h", "-header"], commands.OPTION_STRING, null, fileCompleter],
    ["footerURL", ["-f", "-footer"], commands.OPTION_STRING, null, fileCompleter],
];
commands.addUserCommand(['personas'], "Personas Theme",
    function(args){
        let id = args[0];
        if (args.bang){
            LightweightThemeManager.forgetUsedTheme(id);
            return;
        }
        let registeredThemer = LightweightThemeManager.getUsedTheme(id);
        if (registeredThemer) {
            LightweightThemeManager.currentTheme = registeredThemer;
        } else {
            let buf = {id: id};
            options.forEach(function(opt){
                if (args[opt[1][0]]){
                    buf[opt[0]] = args[opt[1][0]];
                };
            });
            let t = createLWTheme(buf);
            if (t){
                LightweightThemeManager.currentTheme = t;
            };
        }
    }, {
        argCount: "1",
        bang: true,
        options: options.map(function(opt) opt.slice(1)),
        completer: function(context, args){
            context.format = {
                title: ["Name","Description"],
                keys: { text: "id", description: "name", icon: "iconURL" },
                process: [
                    function name(item, text) <span sltyle="vertial-align: center">
                        <img src={item.icon}/><span>{item.item.id}</span>
                    </span>,
                    function desc(item, text) <>
                        <img src={item.item.previewURL} align="left" style="height:3em;"/>
                        <span>{item.item.name}<br/>{item.item.description}</span>
                    </>,
                ]
            }
            context.completions = LightweightThemeManager.usedThemes;
        }
    },
    true
);
EOM

